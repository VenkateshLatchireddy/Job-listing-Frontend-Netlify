{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Navbar from './components/Navbar/Navbar';\nimport SearchAndSort from './components/SearchAndSort/SearchAndSort';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport JobListing from './components/JobListing/JobListing';\nimport AddJobDetails from './components/AddJobDescription/AddJobDescription';\nimport JobDetails from './components/JobDetails/JobDetails';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const location = useLocation();\n\n  // Check if user is logged in when the app loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  // Fetch jobs with optional search term and skills\n  const fetchJobs = async (searchTerm = \"\", skills = []) => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/jobs\", {\n        params: {\n          searchTerm,\n          skills: skills.join(\",\")\n        }\n      });\n      setJobs(response.data.jobs);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n\n  // Load jobs on mount\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  // Pages where Navbar should be hidden\n  const hideNavbarOnPages = [\"/login\", \"/register\", \"/add-job\"];\n  const hideSearchAndJobsOnPages = [\"/add-job\", \"/login\", \"/register\"];\n  const isJobDetailsPage = location.pathname.startsWith(\"/job/\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), !hideNavbarOnPages.includes(location.pathname) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        setIsLoggedIn: setIsLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-job\",\n          element: /*#__PURE__*/_jsxDEV(AddJobDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/job/:id\",\n          element: /*#__PURE__*/_jsxDEV(JobDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !isJobDetailsPage && !hideSearchAndJobsOnPages.includes(location.pathname) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-listing-container\",\n        children: [/*#__PURE__*/_jsxDEV(SearchAndSort, {\n          isLoggedIn: isLoggedIn,\n          onFilter: fetchJobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(JobListing, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Q9uERLtmcx077OmMpkQVjf7/Rb0=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","useLocation","axios","Home","Login","Register","Navbar","SearchAndSort","ToastContainer","JobListing","AddJobDetails","JobDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","jobs","setJobs","location","token","localStorage","getItem","fetchJobs","searchTerm","skills","response","get","params","join","data","error","console","hideNavbarOnPages","hideSearchAndJobsOnPages","isJobDetailsPage","pathname","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","className","path","element","onFilter","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport SearchAndSort from './components/SearchAndSort/SearchAndSort';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport JobListing from './components/JobListing/JobListing';\r\nimport AddJobDetails from './components/AddJobDescription/AddJobDescription';\r\nimport JobDetails from './components/JobDetails/JobDetails';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [jobs, setJobs] = useState([]);\r\n  const location = useLocation();\r\n\r\n  // Check if user is logged in when the app loads\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch jobs with optional search term and skills\r\n  const fetchJobs = async (searchTerm = \"\", skills = []) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/jobs\", {\r\n        params: { searchTerm, skills: skills.join(\",\") },\r\n      });\r\n      setJobs(response.data.jobs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n  };\r\n\r\n  // Load jobs on mount\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Pages where Navbar should be hidden\r\n  const hideNavbarOnPages = [\"/login\", \"/register\", \"/add-job\"];\r\n  const hideSearchAndJobsOnPages = [\"/add-job\", \"/login\", \"/register\"];\r\n  const isJobDetailsPage = location.pathname.startsWith(\"/job/\");\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      {!hideNavbarOnPages.includes(location.pathname) && (\r\n        <div className=\"navbar-container\">\r\n          <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"app-main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/add-job\" element={<AddJobDetails />} />\r\n          <Route path=\"/job/:id\" element={<JobDetails />} />\r\n        </Routes>\r\n\r\n        {/* Show SearchAndSort and JobListing only if NOT on JobDetails page */}\r\n        {!isJobDetailsPage && !hideSearchAndJobsOnPages.includes(location.pathname) && (\r\n          <div className=\"job-listing-container\">\r\n            <SearchAndSort isLoggedIn={isLoggedIn} onFilter={fetchJobs} />\r\n            <JobListing jobs={jobs} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}