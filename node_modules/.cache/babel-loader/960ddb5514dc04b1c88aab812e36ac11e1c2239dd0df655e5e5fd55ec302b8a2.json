{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Login.css\"; // Import external CSS file\nimport { useNavigate } from \"react-router-dom\";\nimport JobListingimg from \"../assets/job-listing.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // State for form inputs and error message\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handle input change\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const token = data.token; // Get token from API response\n        const userId = data.userId; // Get userId from API response\n\n        console.log(\"Token received:\", token);\n        console.log(\"User ID received:\", userId);\n\n        // Store the token and userId in localStorage\n        localStorage.setItem(\"accessToken\", token);\n        localStorage.setItem(\"userId\", userId);\n        console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\n        console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\n\n        // Fetch protected data after login\n        fetchProtectedData(token);\n\n        // Update login state in App.js\n        setIsLoggedIn(true);\n        navigate(\"/\"); // Redirect to home or dashboard\n      } else {\n        setError(data.message || \"Invalid credentials\");\n      }\n    } catch (err) {\n      setError(\"Server error. Please try again.\");\n      console.error(err);\n    }\n  };\n\n  // Fetch data from a protected route after login\n  const fetchProtectedData = token => {\n    fetch(\"http://localhost:5000/api/protected-route\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => console.log(\"Protected Route Data:\", data)).catch(error => console.error(\"Error fetching protected data:\", error));\n  };\n  const handleSignupRedirect = () => {\n    navigate(\"/register\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Already Have An Account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Personal Job Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sign-in-btn\",\n        onClick: handleSubmit,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-text\",\n        onClick: handleSignupRedirect,\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: JobListingimg,\n        alt: \"Login Visual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"I5nlxnySThrFynfg0b4CBLAO5h0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","JobListingimg","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","navigate","email","setEmail","password","setPassword","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","userId","console","log","localStorage","setItem","getItem","fetchProtectedData","message","err","then","catch","handleSignupRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","href","src","alt","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Login.css\"; // Import external CSS file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobListingimg from \"../assets/job-listing.jpg\";\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n    const navigate = useNavigate();\r\n\r\n    // State for form inputs and error message\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        if (e.target.name === \"email\") {\r\n            setEmail(e.target.value);\r\n        } else if (e.target.name === \"password\") {\r\n            setPassword(e.target.value);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n    \r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n    \r\n            const data = await response.json();\r\n    \r\n            if (response.ok) {\r\n                const token = data.token; // Get token from API response\r\n                const userId = data.userId; // Get userId from API response\r\n    \r\n                console.log(\"Token received:\", token);\r\n                console.log(\"User ID received:\", userId);\r\n    \r\n                // Store the token and userId in localStorage\r\n                localStorage.setItem(\"accessToken\", token);\r\n                localStorage.setItem(\"userId\", userId);\r\n    \r\n                console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\r\n                console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\r\n    \r\n                // Fetch protected data after login\r\n                fetchProtectedData(token);\r\n    \r\n                // Update login state in App.js\r\n                setIsLoggedIn(true);\r\n                navigate(\"/\"); // Redirect to home or dashboard\r\n            } else {\r\n                setError(data.message || \"Invalid credentials\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Server error. Please try again.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    // Fetch data from a protected route after login\r\n    const fetchProtectedData = (token) => {\r\n        fetch(\"http://localhost:5000/api/protected-route\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(\"Protected Route Data:\", data))\r\n        .catch(error => console.error(\"Error fetching protected data:\", error));\r\n    };\r\n\r\n    const handleSignupRedirect = () => {\r\n        navigate(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {/* Left Column - Login Form */}\r\n            <div className=\"login-form\">\r\n                <h2>Already Have An Account?</h2>\r\n                <p>Your Personal Job Finder</p>\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"sign-in-btn\" onClick={handleSubmit}>\r\n                    Sign In\r\n                </button>\r\n\r\n                <p className=\"signup-text\" onClick={handleSignupRedirect}>\r\n                    Don't have an account? <a href=\"#\">Sign Up</a>\r\n                </p>\r\n            </div>\r\n\r\n            {/* Right Column - Image */}\r\n            <div className=\"login-image\">\r\n                <img src={JobListingimg} alt=\"Login Visual\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}