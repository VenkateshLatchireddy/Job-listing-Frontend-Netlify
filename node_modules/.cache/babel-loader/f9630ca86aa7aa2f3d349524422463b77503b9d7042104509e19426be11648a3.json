{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\components\\\\JobListing\\\\JobListing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport JobCard from '../JobCard/JobCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListing = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState({});\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchJobs = async (filters, pageNumber = 1) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/jobs`, {\n        params: {\n          ...filters,\n          page: pageNumber,\n          limit: 5\n        } // Pagination: 5 jobs per page\n      });\n      setJobs(response.data.jobs);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchJobs(filters, page);\n  }, [filters, page]);\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    setPage(1); // Reset to first page when applying new filters\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchAndSort, {\n      isLoggedIn: true,\n      onFilter: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      id: job.id,\n      companyName: job.companyName,\n      companyLogo: job.companyLogo,\n      jobPosition: job.jobPosition,\n      hiringCount: job.hiringCount,\n      monthlySalary: job.monthlySalary,\n      jobType: job.jobType,\n      workType: job.remote_office === 'remote' ? 'Remote' : 'On-Site',\n      location: job.location,\n      skillsRequired: job.skillsRequired\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page - 1),\n        disabled: page === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Page \", page, \" of \", totalPages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        disabled: page >= totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(JobListing, \"KRYUyisLpxXyC/WvnTFNIL0OmnQ=\");\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useEffect","useState","JobCard","axios","jsxDEV","_jsxDEV","JobListing","_s","jobs","setJobs","loading","setLoading","filters","setFilters","page","setPage","totalPages","setTotalPages","fetchJobs","pageNumber","response","get","params","limit","data","error","console","handleFilterChange","newFilters","children","SearchAndSort","isLoggedIn","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","id","companyName","companyLogo","jobPosition","hiringCount","monthlySalary","jobType","workType","remote_office","location","skillsRequired","className","onClick","disabled","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/components/JobListing/JobListing.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport JobCard from '../JobCard/JobCard';\r\nimport axios from 'axios';\r\n\r\nconst JobListing = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [filters, setFilters] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const fetchJobs = async (filters, pageNumber = 1) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/jobs`, {\r\n        params: { ...filters, page: pageNumber, limit: 5 }, // Pagination: 5 jobs per page\r\n      });\r\n      setJobs(response.data.jobs);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs(filters, page);\r\n  }, [filters, page]);\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setPage(1); // Reset to first page when applying new filters\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchAndSort isLoggedIn={true} onFilter={handleFilterChange} />\r\n\r\n      {loading ? (\r\n        <p>Loading jobs...</p>\r\n      ) : jobs.length > 0 ? (\r\n        jobs.map((job) => (\r\n          <JobCard\r\n            key={job.id}\r\n            id={job.id}\r\n            companyName={job.companyName}\r\n            companyLogo={job.companyLogo}\r\n            jobPosition={job.jobPosition}\r\n            hiringCount={job.hiringCount}\r\n            monthlySalary={job.monthlySalary}\r\n            jobType={job.jobType}\r\n            workType={job.remote_office === 'remote' ? 'Remote' : 'On-Site'}\r\n            location={job.location}\r\n            skillsRequired={job.skillsRequired}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>No jobs available.</p>\r\n      )}\r\n\r\n      <div className=\"pagination\">\r\n        <button\r\n          onClick={() => setPage(page - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span> Page {page} of {totalPages} </span>\r\n        <button\r\n          onClick={() => setPage(page + 1)}\r\n          disabled={page >= totalPages}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}