{"ast":null,"code":"import React,{useState}from\"react\";import\"../styles/Login.css\";// Import external CSS file\nimport{useNavigate}from\"react-router-dom\";import{useEffect}from\"react\";import JobListingimg from\"../assets/job-listing.jpg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const Login=_ref=>{let{setIsLoggedIn,fetchJobs}=_ref;const navigate=useNavigate();useEffect(()=>{// Prevent back navigation to logged-in session\nwindow.history.pushState(null,\"\",window.location.href);window.onpopstate=()=>{navigate(\"/\",{replace:true});};},[]);// State for form inputs and error message\nconst[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");// Handle input change\nconst handleChange=e=>{if(e.target.name===\"email\"){setEmail(e.target.value);}else if(e.target.name===\"password\"){setPassword(e.target.value);}};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();setError(\"\");try{const response=await fetch(`${API_BASE_URL}/api/users/login`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});const data=await response.json();console.log(\"API Response Data:\",data);// Log entire response\nif(response.ok){const token=data.token;// Get token from API response\nconst userId=data.userId;// Get userId from API response\nif(!userId){console.error(\"User ID is undefined in the response!\");return;}console.log(\"Token received:\",token);console.log(\"User ID received:\",userId);// Store the token and userId in localStorage\nlocalStorage.setItem(\"accessToken\",token);localStorage.setItem(\"userId\",userId);// Store userId\nconsole.log(\"Stored Token:\",localStorage.getItem(\"accessToken\"));console.log(\"Stored User ID:\",localStorage.getItem(\"userId\"));// Fetch protected data after login\nfetchProtectedData(token);// Update login state in App.js\nsetIsLoggedIn(true);navigate(\"/\");// Redirect to home or dashboard\n// Call fetchJobs to update job listing after login\nfetchJobs();// This will fetch jobs after successful login\n}else{setError(data.message||\"Invalid credentials\");}}catch(err){setError(\"Server error. Please try again.\");console.error(err);}};// Fetch data from a protected route after login\nconst fetchProtectedData=token=>{fetch(`${API_BASE_URL}/api/protected-route`,{method:\"GET\",headers:{\"Authorization\":`Bearer ${token}`,\"Content-Type\":\"application/json\"}}).then(response=>response.json()).then(data=>console.log(\"Protected Route Data:\",data)).catch(error=>console.error(\"Error fetching protected data:\",error));};const handleSignupRedirect=()=>{navigate(\"/register\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Already Have An Account?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your Personal Job Finder\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",value:email,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:password,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(\"button\",{className:\"sign-in-btn\",onClick:handleSubmit,children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"signup-text\",children:[\"Don't have an account?\",\" \",/*#__PURE__*/_jsx(\"span\",{onClick:handleSignupRedirect,className:\"signup-link\",children:\"Sign Up\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login-image\",children:/*#__PURE__*/_jsx(\"img\",{src:JobListingimg,alt:\"Login Visual\"})})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","useEffect","JobListingimg","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Login","_ref","setIsLoggedIn","fetchJobs","navigate","window","history","pushState","location","href","onpopstate","replace","email","setEmail","password","setPassword","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","token","userId","localStorage","setItem","getItem","fetchProtectedData","message","err","then","catch","handleSignupRedirect","className","children","type","placeholder","onChange","required","onClick","src","alt"],"sources":["V:/JB-Listing-Portal/job-listing-frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Login.css\"; // Import external CSS file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport JobListingimg from \"../assets/job-listing.jpg\";\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst Login = ({ setIsLoggedIn, fetchJobs }) => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Prevent back navigation to logged-in session\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = () => {\r\n            navigate(\"/\", { replace: true }); \r\n        };\r\n    }, []);\r\n\r\n    // State for form inputs and error message\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        if (e.target.name === \"email\") {\r\n            setEmail(e.target.value);\r\n        } else if (e.target.name === \"password\") {\r\n            setPassword(e.target.value);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n    \r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/users/login`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n    \r\n            const data = await response.json();\r\n            console.log(\"API Response Data:\", data); // Log entire response\r\n    \r\n            if (response.ok) {\r\n                const token = data.token; // Get token from API response\r\n                const userId = data.userId; // Get userId from API response\r\n    \r\n                if (!userId) {\r\n                    console.error(\"User ID is undefined in the response!\");\r\n                    return;\r\n                }\r\n    \r\n                console.log(\"Token received:\", token);\r\n                console.log(\"User ID received:\", userId);\r\n    \r\n                // Store the token and userId in localStorage\r\n                localStorage.setItem(\"accessToken\", token);\r\n                localStorage.setItem(\"userId\", userId); // Store userId\r\n    \r\n                console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\r\n                console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\r\n    \r\n                // Fetch protected data after login\r\n                fetchProtectedData(token);\r\n    \r\n                // Update login state in App.js\r\n                setIsLoggedIn(true);\r\n                navigate(\"/\"); // Redirect to home or dashboard\r\n                \r\n                // Call fetchJobs to update job listing after login\r\n                fetchJobs();  // This will fetch jobs after successful login\r\n            } else {\r\n                setError(data.message || \"Invalid credentials\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Server error. Please try again.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    // Fetch data from a protected route after login\r\n    const fetchProtectedData = (token) => {\r\n        fetch(`${API_BASE_URL}/api/protected-route`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(\"Protected Route Data:\", data))\r\n        .catch(error => console.error(\"Error fetching protected data:\", error));\r\n    };\r\n\r\n    const handleSignupRedirect = () => {\r\n        navigate(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {/* Left Column - Login Form */}\r\n            <div className=\"login-form\">\r\n                <h2>Already Have An Account?</h2>\r\n                <p>Your Personal Job Finder</p>\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"sign-in-btn\" onClick={handleSubmit}>\r\n                    Sign In\r\n                </button>\r\n\r\n                <p className=\"signup-text\">\r\n                    Don't have an account?{\" \"}\r\n                    <span onClick={handleSignupRedirect} className=\"signup-link\">Sign Up</span>\r\n                </p>\r\n\r\n            </div>\r\n\r\n            {/* Right Column - Image */}\r\n            <div className=\"login-image\">\r\n                <img src={JobListingimg} alt=\"Login Visual\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}