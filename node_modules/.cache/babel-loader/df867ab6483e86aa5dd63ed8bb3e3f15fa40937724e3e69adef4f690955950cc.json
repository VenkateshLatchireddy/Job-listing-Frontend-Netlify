{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\components\\\\JobListing\\\\JobListing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport JobCard from '../JobCard/JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListing = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [totalJobs, setTotalJobs] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filters, setFilters] = useState({});\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/jobs`, {\n        params: {\n          ...filters,\n          page: currentPage,\n          limit: 5\n        }\n      });\n      setJobs(response.data.jobs);\n      setTotalJobs(response.data.totalJobs);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, [filters, currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      ...job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => prev + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(JobListing, \"0fcH5IXao6OxMn6GuCj5fCUZPwc=\");\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useEffect","useState","axios","JobCard","jsxDEV","_jsxDEV","JobListing","_s","jobs","setJobs","totalJobs","setTotalJobs","currentPage","setCurrentPage","filters","setFilters","fetchJobs","response","get","params","page","limit","data","error","console","children","map","job","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","prev","Math","max","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/components/JobListing/JobListing.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport JobCard from '../JobCard/JobCard';\r\n\r\nconst JobListing = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [totalJobs, setTotalJobs] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState({});\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/jobs`, {\r\n        params: { ...filters, page: currentPage, limit: 5 },\r\n      });\r\n      setJobs(response.data.jobs);\r\n      setTotalJobs(response.data.totalJobs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchJobs(); }, [filters, currentPage]);\r\n\r\n  return (\r\n    <div>\r\n      {jobs.map((job) => <JobCard key={job.id} {...job} />)}\r\n      \r\n      <div className=\"pagination\">\r\n        <button onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}>Previous</button>\r\n        <span>Page {currentPage}</span>\r\n        <button onClick={() => setCurrentPage(prev => prev + 1)}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,gCAAgC,EAAE;QACjEC,MAAM,EAAE;UAAE,GAAGL,OAAO;UAAEM,IAAI,EAAER,WAAW;UAAES,KAAK,EAAE;QAAE;MACpD,CAAC,CAAC;MACFZ,OAAO,CAACQ,QAAQ,CAACK,IAAI,CAACd,IAAI,CAAC;MAC3BG,YAAY,CAACM,QAAQ,CAACK,IAAI,CAACZ,SAAS,CAAC;IACvC,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IAAEgB,SAAS,CAAC,CAAC;EAAE,CAAC,EAAE,CAACF,OAAO,EAAEF,WAAW,CAAC,CAAC;EAEzD,oBACEP,OAAA;IAAAoB,QAAA,GACGjB,IAAI,CAACkB,GAAG,CAAEC,GAAG,iBAAKtB,OAAA,CAACF,OAAO;MAAA,GAAkBwB;IAAG,GAAfA,GAAG,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,CAAC,eAErD3B,OAAA;MAAK4B,SAAS,EAAC,YAAY;MAAAR,QAAA,gBACzBpB,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAACsB,IAAI,IAAIC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;QAAAV,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvF3B,OAAA;QAAAoB,QAAA,GAAM,OAAK,EAACb,WAAW;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B3B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAACsB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;QAAAV,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}