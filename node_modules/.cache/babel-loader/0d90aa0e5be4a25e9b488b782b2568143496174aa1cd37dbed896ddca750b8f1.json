{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Login.css\"; // Import external CSS file\nimport { useNavigate } from \"react-router-dom\";\nimport JobListingimg from \"../assets/job-listing.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // State for form inputs and error message\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken'); // Change to 'accessToken'\n    if (token) setIsLoggedIn(true);\n    fetchJobs(); // Fetch jobs on mount\n  }, []);\n\n  // Handle input change\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(\"API Response Data:\", data); // Log the entire response\n\n      if (response.ok) {\n        const token = data.token; // Get token from API response\n        const userId = data.userId; // Get userId from API response\n\n        if (!userId) {\n          console.error(\"User ID is undefined in the response!\");\n          return;\n        }\n        console.log(\"Token received:\", token);\n        console.log(\"User ID received:\", userId);\n\n        // Store the token and userId in localStorage\n        localStorage.setItem(\"accessToken\", token);\n        localStorage.setItem(\"userId\", userId); // Store userId\n\n        console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\n        console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\n\n        // Fetch protected data after login\n        fetchProtectedData(token);\n\n        // Update login state in App.js\n        setIsLoggedIn(true);\n        navigate(\"/\", {\n          replace: true\n        }); // Redirect to home or dashboard and replace history\n      } else {\n        setError(data.message || \"Invalid credentials\");\n      }\n    } catch (err) {\n      setError(\"Server error. Please try again.\");\n      console.error(err);\n    }\n  };\n\n  // Fetch data from a protected route after login\n  const fetchProtectedData = token => {\n    fetch(\"http://localhost:5000/api/protected-route\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => console.log(\"Protected Route Data:\", data)).catch(error => console.error(\"Error fetching protected data:\", error));\n  };\n  const handleSignupRedirect = () => {\n    navigate(\"/register\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Already Have An Account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Personal Job Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sign-in-btn\",\n        onClick: handleSubmit,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-text\",\n        onClick: handleSignupRedirect,\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: JobListingimg,\n        alt: \"Login Visual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"p4+/XtVfoGDeIimXrituTHP85hA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","JobListingimg","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","navigate","email","setEmail","password","setPassword","error","setError","token","localStorage","getItem","fetchJobs","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","userId","setItem","fetchProtectedData","replace","message","err","then","catch","handleSignupRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","href","src","alt","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/Login.css\"; // Import external CSS file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobListingimg from \"../assets/job-listing.jpg\";\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // State for form inputs and error message\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('accessToken'); // Change to 'accessToken'\r\n    if (token) setIsLoggedIn(true);\r\n    fetchJobs(); // Fetch jobs on mount\r\n  }, []);\r\n  \r\n\r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (e.target.name === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"API Response Data:\", data); // Log the entire response\r\n\r\n      if (response.ok) {\r\n        const token = data.token; // Get token from API response\r\n        const userId = data.userId; // Get userId from API response\r\n\r\n        if (!userId) {\r\n          console.error(\"User ID is undefined in the response!\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Token received:\", token);\r\n        console.log(\"User ID received:\", userId);\r\n\r\n        // Store the token and userId in localStorage\r\n        localStorage.setItem(\"accessToken\", token);\r\n        localStorage.setItem(\"userId\", userId); // Store userId\r\n\r\n        console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\r\n        console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\r\n\r\n        // Fetch protected data after login\r\n        fetchProtectedData(token);\r\n\r\n        // Update login state in App.js\r\n        setIsLoggedIn(true);\r\n        navigate(\"/\", { replace: true }); // Redirect to home or dashboard and replace history\r\n      } else {\r\n        setError(data.message || \"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error. Please try again.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Fetch data from a protected route after login\r\n  const fetchProtectedData = (token) => {\r\n    fetch(\"http://localhost:5000/api/protected-route\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => console.log(\"Protected Route Data:\", data))\r\n      .catch(error => console.error(\"Error fetching protected data:\", error));\r\n  };\r\n\r\n  const handleSignupRedirect = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* Left Column - Login Form */}\r\n      <div className=\"login-form\">\r\n        <h2>Already Have An Account?</h2>\r\n        <p>Your Personal Job Finder</p>\r\n\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className=\"sign-in-btn\" onClick={handleSubmit}>\r\n          Sign In\r\n        </button>\r\n\r\n        <p className=\"signup-text\" onClick={handleSignupRedirect}>\r\n          Don't have an account? <a href=\"#\">Sign Up</a>\r\n        </p>\r\n      </div>\r\n\r\n      {/* Right Column - Image */}\r\n      <div className=\"login-image\">\r\n        <img src={JobListingimg} alt=\"Login Visual\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}