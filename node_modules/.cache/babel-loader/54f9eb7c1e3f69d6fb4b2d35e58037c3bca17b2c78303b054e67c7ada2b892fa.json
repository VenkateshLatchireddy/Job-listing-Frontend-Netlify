{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\components\\\\JobListing\\\\JobListing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport JobCard from \"../JobCard/JobCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListing = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n\n  // Function to fetch jobs\n  const fetchJobs = async () => {\n    try {\n      console.log(\"Fetching jobs...\"); // Debugging\n      const response = await fetch(\"http://localhost:5000/api/jobs\");\n      const data = await response.json();\n      console.log(\"API Response:\", data); // Debugging\n\n      if (response.ok) {\n        setJobs(data);\n      } else {\n        console.error(\"Failed to fetch jobs:\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n\n  // Fetch jobs when component mounts\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      ...job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(JobListing, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","jsxDEV","_jsxDEV","JobListing","_s","jobs","setJobs","fetchJobs","console","log","response","fetch","data","json","ok","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","id","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/components/JobListing/JobListing.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport JobCard from \"../JobCard/JobCard\";\r\n\r\nconst JobListing = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  // Function to fetch jobs\r\n  const fetchJobs = async () => {\r\n    try {\r\n      console.log(\"Fetching jobs...\"); // Debugging\r\n      const response = await fetch(\"http://localhost:5000/api/jobs\");\r\n      const data = await response.json();\r\n      console.log(\"API Response:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        setJobs(data);\r\n      } else {\r\n        console.error(\"Failed to fetch jobs:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch jobs when component mounts\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Job Listings</h2>\r\n      {jobs.length > 0 ? (\r\n        jobs.map((job) => <JobCard key={job.id} {...job} />)\r\n      ) : (\r\n        <p>No jobs found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,IAAI,CAAC,CAAC,CAAC;;MAEpC,IAAIF,QAAQ,CAACI,EAAE,EAAE;QACfR,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,MAAM;QACLJ,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEH,IAAI,CAACI,OAAO,CAAC;MACtD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBhB,IAAI,CAACiB,MAAM,GAAG,CAAC,GACdjB,IAAI,CAACkB,GAAG,CAAEC,GAAG,iBAAKtB,OAAA,CAACF,OAAO;MAAA,GAAkBwB;IAAG,GAAfA,GAAG,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,CAAC,gBAEpDnB,OAAA;MAAAe,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CApCID,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}