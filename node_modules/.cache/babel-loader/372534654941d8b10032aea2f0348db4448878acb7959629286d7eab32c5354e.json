{"ast":null,"code":"var _jsxFileName = \"V:\\\\JB-Listing-Portal\\\\job-listing-frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Login.css\"; // Import external CSS file\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport JobListingimg from \"../assets/job-listing.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn,\n  fetchJobs\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Prevent back navigation to logged-in session\n    window.history.pushState(null, \"\", window.location.href);\n    window.onpopstate = () => {\n      navigate(\"/\", {\n        replace: true\n      }); // Redirect to home when back button is pressed\n    };\n  }, []);\n\n  // State for form inputs and error message\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handle input change\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(\"API Response Data:\", data); // Log entire response\n\n      if (response.ok) {\n        const token = data.token; // Get token from API response\n        const userId = data.userId; // Get userId from API response\n\n        if (!userId) {\n          console.error(\"User ID is undefined in the response!\");\n          return;\n        }\n        console.log(\"Token received:\", token);\n        console.log(\"User ID received:\", userId);\n\n        // Store the token and userId in localStorage\n        localStorage.setItem(\"accessToken\", token);\n        localStorage.setItem(\"userId\", userId); // Store userId\n\n        console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\n        console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\n\n        // Fetch protected data after login\n        fetchProtectedData(token);\n\n        // Update login state in App.js\n        setIsLoggedIn(true);\n        navigate(\"/\"); // Redirect to home or dashboard\n\n        // Call fetchJobs to update job listing after login\n        fetchJobs(); // This will fetch jobs after successful login\n      } else {\n        setError(data.message || \"Invalid credentials\");\n      }\n    } catch (err) {\n      setError(\"Server error. Please try again.\");\n      console.error(err);\n    }\n  };\n\n  // Fetch data from a protected route after login\n  const fetchProtectedData = token => {\n    fetch(`${API_BASE_URL}/api/protected-route`, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => console.log(\"Protected Route Data:\", data)).catch(error => console.error(\"Error fetching protected data:\", error));\n  };\n  const handleSignupRedirect = () => {\n    navigate(\"/register\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Already Have An Account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Personal Job Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sign-in-btn\",\n        onClick: handleSubmit,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-text\",\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleSignupRedirect,\n          className: \"signup-link\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: JobListingimg,\n        alt: \"Login Visual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9hOdAvzmf5Yo7fTBwgNbXp3/9tU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useEffect","JobListingimg","jsxDEV","_jsxDEV","Login","setIsLoggedIn","fetchJobs","_s","navigate","window","history","pushState","location","href","onpopstate","replace","email","setEmail","password","setPassword","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","API_BASE_URL","method","headers","body","JSON","stringify","data","json","console","log","ok","token","userId","localStorage","setItem","getItem","fetchProtectedData","message","err","then","catch","handleSignupRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","src","alt","_c","$RefreshReg$"],"sources":["V:/JB-Listing-Portal/job-listing-frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Login.css\"; // Import external CSS file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport JobListingimg from \"../assets/job-listing.jpg\";\r\n\r\nconst Login = ({ setIsLoggedIn, fetchJobs }) => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Prevent back navigation to logged-in session\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.onpopstate = () => {\r\n            navigate(\"/\", { replace: true }); // Redirect to home when back button is pressed\r\n        };\r\n    }, []);\r\n\r\n    // State for form inputs and error message\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        if (e.target.name === \"email\") {\r\n            setEmail(e.target.value);\r\n        } else if (e.target.name === \"password\") {\r\n            setPassword(e.target.value);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n    \r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/users/login`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n    \r\n            const data = await response.json();\r\n            console.log(\"API Response Data:\", data); // Log entire response\r\n    \r\n            if (response.ok) {\r\n                const token = data.token; // Get token from API response\r\n                const userId = data.userId; // Get userId from API response\r\n    \r\n                if (!userId) {\r\n                    console.error(\"User ID is undefined in the response!\");\r\n                    return;\r\n                }\r\n    \r\n                console.log(\"Token received:\", token);\r\n                console.log(\"User ID received:\", userId);\r\n    \r\n                // Store the token and userId in localStorage\r\n                localStorage.setItem(\"accessToken\", token);\r\n                localStorage.setItem(\"userId\", userId); // Store userId\r\n    \r\n                console.log(\"Stored Token:\", localStorage.getItem(\"accessToken\"));\r\n                console.log(\"Stored User ID:\", localStorage.getItem(\"userId\"));\r\n    \r\n                // Fetch protected data after login\r\n                fetchProtectedData(token);\r\n    \r\n                // Update login state in App.js\r\n                setIsLoggedIn(true);\r\n                navigate(\"/\"); // Redirect to home or dashboard\r\n                \r\n                // Call fetchJobs to update job listing after login\r\n                fetchJobs();  // This will fetch jobs after successful login\r\n            } else {\r\n                setError(data.message || \"Invalid credentials\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Server error. Please try again.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    // Fetch data from a protected route after login\r\n    const fetchProtectedData = (token) => {\r\n        fetch(`${API_BASE_URL}/api/protected-route`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(\"Protected Route Data:\", data))\r\n        .catch(error => console.error(\"Error fetching protected data:\", error));\r\n    };\r\n\r\n    const handleSignupRedirect = () => {\r\n        navigate(\"/register\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {/* Left Column - Login Form */}\r\n            <div className=\"login-form\">\r\n                <h2>Already Have An Account?</h2>\r\n                <p>Your Personal Job Finder</p>\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"sign-in-btn\" onClick={handleSubmit}>\r\n                    Sign In\r\n                </button>\r\n\r\n                <p className=\"signup-text\">\r\n                    Don't have an account?{\" \"}\r\n                    <span onClick={handleSignupRedirect} className=\"signup-link\">Sign Up</span>\r\n                </p>\r\n\r\n            </div>\r\n\r\n            {/* Right Column - Image */}\r\n            <div className=\"login-image\">\r\n                <img src={JobListingimg} alt=\"Login Visual\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}