{"ast":null,"code":"var _jsxFileName = \"V:\\\\Job-Listing-Portal\\\\job-listing-frontend\\\\src\\\\components\\\\JobListing\\\\JobListing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport JobCard from '../JobCard/JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListing = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const fetchJobs = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/jobs'); // Replace with your API URL\n      const data = await response.json();\n      setJobs(data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  useEffect(() => {\n    fetchJobs(); // Fetch jobs when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      ...job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(JobListing, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useEffect","useState","JobCard","jsxDEV","_jsxDEV","JobListing","_s","jobs","setJobs","fetchJobs","response","fetch","data","json","error","console","children","length","map","job","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["V:/Job-Listing-Portal/job-listing-frontend/src/components/JobListing/JobListing.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport JobCard from '../JobCard/JobCard';\r\n\r\nconst JobListing = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/jobs'); // Replace with your API URL\r\n      const data = await response.json();\r\n      setJobs(data);\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs(); // Fetch jobs when the component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {jobs.length > 0 ? (\r\n        jobs.map((job) => <JobCard key={job.id} {...job} />)\r\n      ) : (\r\n        <p>No jobs found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListing;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,EACGT,IAAI,CAACU,MAAM,GAAG,CAAC,GACdV,IAAI,CAACW,GAAG,CAAEC,GAAG,iBAAKf,OAAA,CAACF,OAAO;MAAA,GAAkBiB;IAAG,GAAfA,GAAG,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,CAAC,gBAEpDpB,OAAA;MAAAY,QAAA,EAAG;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}